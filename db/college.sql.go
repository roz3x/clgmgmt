// Code generated by sqlc. DO NOT EDIT.
// source: college.sql

package db

import (
	"context"
	"database/sql"
)

const insertCourse = `-- name: InsertCourse :one
insert into  courses (
  name , department_id 
) values (
  $1 , $2 
) returning name, id, instructor_id, department_id
`

type InsertCourseParams struct {
	Name         sql.NullString `json:"name"`
	DepartmentID sql.NullInt32  `json:"department_id"`
}

func (q *Queries) InsertCourse(ctx context.Context, arg InsertCourseParams) (Course, error) {
	row := q.queryRow(ctx, q.insertCourseStmt, insertCourse, arg.Name, arg.DepartmentID)
	var i Course
	err := row.Scan(
		&i.Name,
		&i.ID,
		&i.InstructorID,
		&i.DepartmentID,
	)
	return i, err
}

const insertDepartment = `-- name: InsertDepartment :one
insert into departments 
( 
   name , hod_id
) values(
  $1  , $2 
) returning id, name, hod_id
`

type InsertDepartmentParams struct {
	Name  sql.NullString `json:"name"`
	HodID sql.NullInt32  `json:"hod_id"`
}

func (q *Queries) InsertDepartment(ctx context.Context, arg InsertDepartmentParams) (Department, error) {
	row := q.queryRow(ctx, q.insertDepartmentStmt, insertDepartment, arg.Name, arg.HodID)
	var i Department
	err := row.Scan(&i.ID, &i.Name, &i.HodID)
	return i, err
}
